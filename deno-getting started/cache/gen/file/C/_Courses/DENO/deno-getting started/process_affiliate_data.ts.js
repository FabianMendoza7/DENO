// import using deps.ts:
import { getDataUrl, getThresholdPrice } from "./deps.ts";
// import using import_map.json:
// import { getDataUrl } from "data_sources";
// import { getThresholdPrice } from "prices";
// import common:
// import { getDataUrl } from "https://raw.githubusercontent.com/bricewilson/Deno-Getting-Started/Linking_to_External_Code/affiliate_data.ts";
// import { getThresholdPrice } from "https://raw.githubusercontent.com/bricewilson/Deno-Getting-Started/Linking_to_External_Code/pricing_rules.ts";
const affiliateID = parseInt(Deno.args[0]);
const data_url = getDataUrl(affiliateID);
const response = await fetch(data_url);
const data = await response.json();
const affiliate_products = new Array();
const threshold_price = getThresholdPrice(affiliateID);
data.forEach((product) => {
  if (product.price > threshold_price) {
    product.affiliateID = affiliateID;
    affiliate_products.push(product);
  }
});
Deno.writeTextFile(
  "affiliate_products.json",
  JSON.stringify(affiliate_products, null, " "),
);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZpbGU6Ly8vQzovX0NvdXJzZXMvREVOTy9kZW5vLWdldHRpbmclMjBzdGFydGVkL3Byb2Nlc3NfYWZmaWxpYXRlX2RhdGEudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUHJvZHVjdCB9IGZyb20gXCIuL3Byb2R1Y3QudHNcIjtcclxuXHJcbi8vIGltcG9ydCB1c2luZyBkZXBzLnRzOlxyXG5pbXBvcnQgeyBnZXREYXRhVXJsLCBnZXRUaHJlc2hvbGRQcmljZSB9IGZyb20gXCIuL2RlcHMudHNcIjtcclxuXHJcbi8vIGltcG9ydCB1c2luZyBpbXBvcnRfbWFwLmpzb246XHJcbi8vIGltcG9ydCB7IGdldERhdGFVcmwgfSBmcm9tIFwiZGF0YV9zb3VyY2VzXCI7XHJcbi8vIGltcG9ydCB7IGdldFRocmVzaG9sZFByaWNlIH0gZnJvbSBcInByaWNlc1wiO1xyXG5cclxuLy8gaW1wb3J0IGNvbW1vbjpcclxuLy8gaW1wb3J0IHsgZ2V0RGF0YVVybCB9IGZyb20gXCJodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vYnJpY2V3aWxzb24vRGVuby1HZXR0aW5nLVN0YXJ0ZWQvTGlua2luZ190b19FeHRlcm5hbF9Db2RlL2FmZmlsaWF0ZV9kYXRhLnRzXCI7XHJcbi8vIGltcG9ydCB7IGdldFRocmVzaG9sZFByaWNlIH0gZnJvbSBcImh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9icmljZXdpbHNvbi9EZW5vLUdldHRpbmctU3RhcnRlZC9MaW5raW5nX3RvX0V4dGVybmFsX0NvZGUvcHJpY2luZ19ydWxlcy50c1wiO1xyXG5cclxuY29uc3QgYWZmaWxpYXRlSUQ6IG51bWJlciA9IHBhcnNlSW50KERlbm8uYXJnc1swXSk7XHJcblxyXG5jb25zdCBkYXRhX3VybDogc3RyaW5nID0gZ2V0RGF0YVVybChhZmZpbGlhdGVJRCk7XHJcblxyXG5jb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKGRhdGFfdXJsKTtcclxuXHJcbmNvbnN0IGRhdGEgPSBhd2FpdCByZXNwb25zZS5qc29uKCkgYXMgUHJvZHVjdFtdO1xyXG5cclxuY29uc3QgYWZmaWxpYXRlX3Byb2R1Y3RzOiBQcm9kdWN0W10gPSBuZXcgQXJyYXk8UHJvZHVjdD4oKTtcclxuXHJcbmNvbnN0IHRocmVzaG9sZF9wcmljZTogbnVtYmVyID0gZ2V0VGhyZXNob2xkUHJpY2UoYWZmaWxpYXRlSUQpO1xyXG5cclxuZGF0YS5mb3JFYWNoKChwcm9kdWN0KSA9PiB7XHJcbiAgaWYgKHByb2R1Y3QucHJpY2UgPiB0aHJlc2hvbGRfcHJpY2UpIHtcclxuICAgIHByb2R1Y3QuYWZmaWxpYXRlSUQgPSBhZmZpbGlhdGVJRDtcclxuICAgIGFmZmlsaWF0ZV9wcm9kdWN0cy5wdXNoKHByb2R1Y3QpO1xyXG4gIH1cclxufSk7XHJcblxyXG5EZW5vLndyaXRlVGV4dEZpbGUoXHJcbiAgXCJhZmZpbGlhdGVfcHJvZHVjdHMuanNvblwiLFxyXG4gIEpTT04uc3RyaW5naWZ5KGFmZmlsaWF0ZV9wcm9kdWN0cywgbnVsbCwgXCIgXCIpLFxyXG4pO1xyXG4iXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsd0JBQXdCO0FBQ3hCLFNBQVMsVUFBVSxFQUFFLGlCQUFpQixRQUFRLFlBQVk7QUFFMUQsZ0NBQWdDO0FBQ2hDLDZDQUE2QztBQUM3Qyw4Q0FBOEM7QUFFOUMsaUJBQWlCO0FBQ2pCLDhJQUE4STtBQUM5SSxvSkFBb0o7QUFFcEosTUFBTSxjQUFzQixTQUFTLEtBQUssSUFBSSxDQUFDLEVBQUU7QUFFakQsTUFBTSxXQUFtQixXQUFXO0FBRXBDLE1BQU0sV0FBVyxNQUFNLE1BQU07QUFFN0IsTUFBTSxPQUFPLE1BQU0sU0FBUztBQUU1QixNQUFNLHFCQUFnQyxJQUFJO0FBRTFDLE1BQU0sa0JBQTBCLGtCQUFrQjtBQUVsRCxLQUFLLFFBQVEsQ0FBQztJQUNaLElBQUksUUFBUSxRQUFRLGlCQUFpQjtRQUNuQyxRQUFRLGNBQWM7UUFDdEIsbUJBQW1CLEtBQUs7SUFDMUI7QUFDRjtBQUVBLEtBQUssY0FDSCwyQkFDQSxLQUFLLFVBQVUsb0JBQW9CLE1BQU0ifQ==
